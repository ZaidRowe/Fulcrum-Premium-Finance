{"version":3,"sources":["clearcaches/src/ClearCachesUtility.js"],"names":["$","Craft","ClearCachesUtility","Garnish","Base","extend","addListener","formId","this","$form","currentTarget","$trigger","preventDefault","$status","data","$allDone","find","ev","hasClass","ProgressBar","resetProgressBar","progressBar","$progressBar","removeClass","velocity","proxy","postData","complete","expandPostArray","postActionRequest","params","getPostData","response","error","action","textStatus","setProgressPercentage","setTimeout","appendTo","opacity","duration","trigger","noop","css","addClass"],"mappings":"CAAA,SAACA,GACGC,MAAMC,mBAAqBC,QAAQC,KAAKC,OAE5B,CACKC,KAAAA,SAAcC,GAF3BC,KAAAF,YAAAN,EAAA,gBAAA,SAAA,aAOYS,SAAY,SAACC,GACbC,EAAQC,iBACRC,IAOOC,EAAKC,EAPFN,EAAMO,EAANC,EAAWP,eADrBC,EAAWF,EAAMO,KAAK,iBAGbE,EAAST,EAAAO,KAAa,mBAElCL,EAAAO,SAAA,cAIcT,EAAOR,KAAMkB,gBAIZC,EAAAA,EAAZN,KAAA,eACWL,EAAWW,mBACzBL,EAAAN,EAAAK,KAAA,aALcO,EAAeA,IAAAA,MAAAA,YAA1BR,GACGJ,EAAAK,KAAA,cAAAO,IAQPA,EAAYC,aAAsBC,YAAQC,UAEvCH,EAAAC,aAAAE,SAAA,QAAAA,SAAA,CACaC,QAAM,GACVC,CACMC,SAASC,EAAAA,OAAAA,WAEbC,IAAAA,EAAkBC,QAAxBC,YAAgDC,GAC5BA,EAASC,MAAzBL,gBAAgCF,GAE/BzB,MAAA4B,kBAAAC,EAAAI,OAAAJ,EAAA,CAAAE,EAAAG,KAFGH,GAAYA,EAASC,OAIbG,MAAAA,EAAsBH,OAIdZ,EAACe,sBAAA,KAEFC,WAAWtB,KACzBA,IAHGA,EAAWf,EAAE,4CAA4CsC,SAASzB,GAK1DS,EAAaE,IAAS,UAAA,GAAUf,EAAAK,KAAA,UAAAC,IACNM,EAAAC,aAAAE,SAAA,CAAAe,QAAA,GAAA,CACZC,SAAA,OAAAb,SAAA,KAAUZ,EAAAS,SAAA,CAAAe,QAAA,GAAA,CAAAC,SAAA,SAAI7B,EAAAY,YAAA,YAAWZ,EAAA8B,QAAA,aAElCA,MACZ,CALLd,SAAA3B,EAAA0C,SAQLlC,QA1BGO,GAHdA,EAAA4B,IAAA,UAAA,GAoCYhC,EAAKiC,SAAb,YACHjC,EAAA8B,QAAA,YAlEjB,CAqEgB9B","file":"ClearCachesUtility.min.js","sourcesContent":["(function($) {\n    Craft.ClearCachesUtility = Garnish.Base.extend(\n        {\n            init: function(formId) {\n                this.addListener($('form.utility'), 'submit', 'onSubmit');\n            },\n\n            onSubmit: function(ev) {\n                ev.preventDefault();\n                let $form = $(ev.currentTarget);\n                let $trigger = $form.find('button.submit');\n                let $status = $form.find('.utility-status');\n\n                if ($trigger.hasClass('disabled')) {\n                    return;\n                }\n\n                let progressBar, $allDone;\n                if (!$form.data('progressBar')) {\n                    progressBar = new Craft.ProgressBar($status);\n                    $form.data('progressBar', progressBar);\n                } else {\n                    progressBar = $form.data('progressBar');\n                    progressBar.resetProgressBar();\n                    $allDone = $form.data('allDone');\n                }\n\n                progressBar.$progressBar.removeClass('hidden');\n\n                progressBar.$progressBar.velocity('stop').velocity({\n                    opacity: 1\n                }, {\n                    complete: $.proxy(function() {\n                        let postData = Garnish.getPostData($form);\n                        let params = Craft.expandPostArray(postData);\n\n                        Craft.postActionRequest(params.action, params, (response, textStatus) => {\n                            if (response && response.error) {\n                                alert(response.error);\n                            }\n\n                            progressBar.setProgressPercentage(100);\n\n                            setTimeout(() => {\n                                if (!$allDone) {\n                                    $allDone = $('<div class=\"alldone\" data-icon=\"done\" />').appendTo($status);\n                                    $allDone.css('opacity', 0);\n                                    $form.data('allDone', $allDone);\n                                }\n\n                                progressBar.$progressBar.velocity({opacity: 0}, {\n                                    duration: 'fast', complete: () => {\n                                        $allDone.velocity({opacity: 1}, {duration: 'fast'});\n                                        $trigger.removeClass('disabled');\n                                        $trigger.trigger('focus');\n                                    },\n                                });\n                            }, 300);\n                        }, {\n                            complete: $.noop\n                        });\n                    }, this)\n                });\n\n                if ($allDone) {\n                    $allDone.css('opacity', 0);\n                }\n\n                $trigger.addClass('disabled');\n                $trigger.trigger('blur');\n            },\n        });\n})(jQuery);\n"]}