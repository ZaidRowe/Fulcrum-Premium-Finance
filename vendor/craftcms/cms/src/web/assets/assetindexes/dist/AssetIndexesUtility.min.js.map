{"version":3,"sources":["assetindexes/src/AssetIndexesUtility.js"],"names":["$","Craft","AssetIndexesUtility","Garnish","Base","extend","$trigger","totalActions","loadingActions","completedActions","cacheImages","sessionId","$form","addListener","formId","this","preventDefault","onSubmit","progressBar","resetProgressBar","ev","hasClass","$progressBar","removeClass","ProgressBar","$status","proxy","postData","queue","start","$progressBarStatus","params","indexingData","complete","response","expandPostArray","requestCounter","volumeData","i","volumes","length","total","push","process","volumeId","processIndexing","finishIndexing","bind","setItemCount","$allDone","css","shift","postActionRequest","trigger","updateProgressBar","setProcessedItemCount","maxConcurrentActions","error","alert","appendTo","data","$cancelBtn","$bod","$body","$modal","html","confirm","onComplete","$buttons","$footer","showDelete","type","class","t","initUiElements","Modal","text","hideOnShadeClick","hide","getPostData","modal","hideOnEsc","onHide","noop","showConfirmDialog","finish","overview","opacity","addClass","velocity","duration","jQuery"],"mappings":"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","file":"AssetIndexesUtility.min.js","sourcesContent":["(function($) {\n    Craft.AssetIndexesUtility = Garnish.Base.extend(\n        {\n            $trigger: null,\n            $form: null,\n\n            totalActions: null,\n            completedActions: null,\n            loadingActions: null,\n            queue: null,\n\n            cacheImages: false,\n            sessionId: null,\n\n            init: function(formId) {\n                this.$form = $('#' + formId);\n                this.$trigger = $('input.submit', this.$form);\n                this.$status = $('.utility-status', this.$form);\n\n                this.addListener(this.$form, 'submit', 'onSubmit');\n            },\n\n\n            onSubmit: function(ev) {\n                ev.preventDefault();\n\n                if (!this.$trigger.hasClass('disabled')) {\n                    if (!this.progressBar) {\n                        this.progressBar = new Craft.ProgressBar(this.$status, true);\n                    } else {\n                        this.progressBar.resetProgressBar();\n                    }\n\n                    this.totalActions = 0;\n                    this.loadingActions = 0;\n                    this.completedActions = 0;\n                    this.queue = [];\n\n                    this.progressBar.$progressBar.removeClass('hidden');\n                    this.progressBar.$progressBarStatus.removeClass('hidden');\n\n                    this.progressBar.$progressBar.velocity('stop').velocity(\n                        {\n                            opacity: 1\n                        },\n                        {\n                            complete: $.proxy(function() {\n                                var postData = Garnish.getPostData(this.$form),\n                                    params = Craft.expandPostArray(postData);\n                                    params.start = true;\n\n                                this.cacheImages = params.cacheImages;\n\n                                Craft.postActionRequest('utilities/asset-index-perform-action', {params: params}, function (response) {\n                                    if (response.indexingData) {\n                                        this.sessionId = response.indexingData.sessionId;\n\n                                        // Load up all the data\n                                        for (var i = 0; i < response.indexingData.volumes.length; i++) {\n                                            var volumeData = response.indexingData.volumes[i];\n\n                                            for (var requestCounter = 0; requestCounter < volumeData.total; requestCounter++) {\n                                                this.queue.push({\n                                                    process: true,\n                                                    sessionId: this.sessionId,\n                                                    volumeId: volumeData.volumeId,\n                                                    cacheImages: this.cacheImages\n                                                });\n                                                this.totalActions++;\n                                            }\n                                        }\n\n                                        if (this.totalActions > 0) {\n                                            this.processIndexing();\n                                        } else {\n                                            this.finishIndexing();\n                                        }\n                                    }\n                                }.bind(this));\n                            }, this)\n                        });\n\n                    if (this.$allDone) {\n                        this.$allDone.css('opacity', 0);\n                    }\n\n                    this.$trigger.addClass('disabled');\n                    this.$trigger.trigger('blur');\n                }\n            },\n\n            updateProgressBar: function() {\n                this.progressBar.setItemCount(this.totalActions);\n                this.progressBar.setProcessedItemCount(this.completedActions);\n                this.progressBar.updateProgressBar();\n            },\n\n            processIndexing: function() {\n                if (this.completedActions + this.loadingActions < this.totalActions && this.loadingActions < Craft.AssetIndexesUtility.maxConcurrentActions) {\n                    this.loadingActions++;\n\n                    var params = this.queue.shift();\n                    Craft.postActionRequest('utilities/asset-index-perform-action', {params: params}, function (response) {\n                        this.loadingActions--;\n                        this.completedActions++;\n\n                        this.updateProgressBar();\n\n                        if (response && response.error) {\n                            alert(response.error);\n                        }\n\n                        if (this.completedActions == this.totalActions) {\n                            this.finishIndexing();\n                        } else {\n                            this.processIndexing();\n                        }\n                    }.bind(this));\n\n                    // Try again, in case we have more space.\n                    this.processIndexing();\n                }\n            },\n\n            showConfirmDialog: function(data) {\n                var $modal = $('<form class=\"modal fitted confirmmodal\"/>').appendTo(Garnish.$bod),\n                    $body = $('<div class=\"body\"/>').appendTo($modal).html(data.confirm),\n                    $footer = $('<footer class=\"footer\"/>').appendTo($modal),\n                    $buttons = $('<div class=\"buttons right\"/>').appendTo($footer);\n\n                if (data.showDelete) {\n                    let $cancelBtn = $('<button/>', {\n                        type: 'button',\n                        class: 'btn',\n                        text: Craft.t('app', 'Keep them'),\n                    }).appendTo($buttons);\n                    $('<button/>', {\n                        type: 'submit',\n                        class: 'btn submit',\n                        text: Craft.t('app', 'Delete them'),\n                    }).appendTo($buttons);\n\n                    this.addListener($cancelBtn, 'click', function() {\n                        modal.hide();\n                        this.onComplete();\n                    });\n                } else {\n                    $('<button/>', {\n                        type: 'submit',\n                        class: 'btn submit',\n                        text: Craft.t('app', 'OK'),\n                    }).appendTo($buttons);\n                }\n\n                Craft.initUiElements($body);\n\n                var modal = new Garnish.Modal($modal, {\n                    hideOnEsc: false,\n                    hideOnShadeClick: false,\n                    onHide: $.proxy(this, 'onActionResponse')\n                });\n\n                this.addListener($modal, 'submit', function(ev) {\n                    ev.preventDefault();\n\n                    modal.settings.onHide = $.noop;\n                    modal.hide();\n\n                    var postData = Garnish.getPostData($body);\n                    var params = Craft.expandPostArray(postData);\n\n                    $.extend(params, data.params);\n                    params.finish = true;\n\n                    Craft.postActionRequest('utilities/asset-index-perform-action', {params: params}, $.noop);\n                    this.onComplete();\n                });\n            },\n\n            finishIndexing: function() {\n                var params = {\n                    sessionId: this.sessionId,\n                    overview: true\n                };\n\n                Craft.postActionRequest('utilities/asset-index-perform-action', {params: params}, function (response) {\n                    if (response.confirm) {\n                        this.showConfirmDialog(response);\n                    } else {\n                        this.onComplete();\n                    }\n                }.bind(this));\n            },\n\n            onComplete: function() {\n                if (!this.$allDone) {\n                    this.$allDone = $('<div class=\"alldone\" data-icon=\"done\" />').appendTo(this.$status);\n                    this.$allDone.css('opacity', 0);\n                }\n\n                this.progressBar.$progressBarStatus.addClass('hidden');\n                this.progressBar.$progressBar.velocity({opacity: 0}, {\n                    duration: 'fast', complete: $.proxy(function() {\n                        this.$allDone.velocity({opacity: 1}, {duration: 'fast'});\n                        this.$trigger.removeClass('disabled');\n                        this.$trigger.trigger('focus');\n                    }, this)\n                });\n            }\n        },\n        {\n            maxConcurrentActions: 3\n        });\n})(jQuery);\n"]}