{"version":3,"sources":["beyondgrammar/beyondgrammar.js"],"names":["$R","add","init","app","this","opts","editor","cleaner","onoriginalblur","e","dom","target","hasClass","preventDefault","stopBlur","onsource","closed","focus","_activate","start","GrammarChecker","_getGrammarChecker","beyondgrammar","addUnconvertRules","$wrapper","find","unwrap","$editor","getElement","attr","checker","get","service","grammar","then","activate","window","Redactor"],"mappings":"CAAA,SAAUA,GAENA,EAAGC,IAAI,SAAU,gBAAiB,CAC9BC,KAAM,SAASC,GAEXC,KAAKD,IAAMA,EACXC,KAAKC,KAAOF,EAAIE,KAChBD,KAAKE,OAASH,EAAIG,OAClBF,KAAKG,QAAUJ,EAAII,SAGvBC,eAAgB,SAASC,GAGrB,GADcT,EAAGU,IAAID,EAAEE,QACXC,SAAS,eAIjB,OAFAH,EAAEI,sBACFT,KAAKD,IAAIW,UAAW,GAIxBV,KAAKD,IAAIW,UAAW,GAExBC,SAAU,CACNC,OAAQ,WAEJZ,KAAKE,OAAOW,QACZb,KAAKc,cAIbC,MAAO,WAEHf,KAAKgB,eAAiBhB,KAAKiB,qBACtBjB,KAAKC,KAAKiB,eAAkBlB,KAAKgB,iBAGtChB,KAAKG,QAAQgB,kBAAkB,cAAc,SAASC,GAElDA,EAASC,KAAK,aAAaC,YAI/BtB,KAAKc,cAITA,UAAW,WAGP,IAAIS,EAAUvB,KAAKE,OAAOsB,aAC1BD,EAAQE,KAAK,cAAc,GAE3B,IAAIC,EAAU,IAAI1B,KAAKgB,eAAeO,EAAQI,MAAO3B,KAAKC,KAAKiB,cAAcU,QAAS5B,KAAKC,KAAKiB,cAAcW,SAC9GH,EAAQ5B,OAAOgC,MAAK,WAGhBJ,EAAQK,eAGhBd,mBAAoB,WAEhB,YAA2C,IAA5Be,OAAsB,eAA6BA,OAAsB,cAAkB,kBA9DtH,CAiEGC","file":"beyondgrammar.js","sourcesContent":["(function($R)\n{\n    $R.add('plugin', 'beyondgrammar', {\n        init: function(app)\n        {\n            this.app = app;\n            this.opts = app.opts;\n            this.editor = app.editor;\n            this.cleaner = app.cleaner;\n        },\n        // messages\n        onoriginalblur: function(e)\n        {\n            var $target = $R.dom(e.target);\n            if ($target.hasClass('pwa-suggest'))\n            {\n                e.preventDefault();\n                this.app.stopBlur = true;\n                return;\n            }\n\n            this.app.stopBlur = false;\n        },\n        onsource: {\n            closed: function()\n            {\n                this.editor.focus();\n                this._activate();\n            }\n        },\n        // public\n        start: function()\n        {\n            this.GrammarChecker = this._getGrammarChecker();\n            if (!this.opts.beyondgrammar || !this.GrammarChecker) return;\n\n            // add cleaner rules\n            this.cleaner.addUnconvertRules('spellcheck', function($wrapper)\n            {\n                $wrapper.find('.pwa-mark').unwrap();\n            });\n\n            // activate\n            this._activate();\n        },\n\n        // private\n        _activate: function()\n        {\n            // editor\n            var $editor = this.editor.getElement();\n            $editor.attr('spellcheck', false);\n\n            var checker = new this.GrammarChecker($editor.get(), this.opts.beyondgrammar.service, this.opts.beyondgrammar.grammar);\n            checker.init().then(function()\n            {\n                //grammar checker is inited and can be activate\n                checker.activate();\n            });\n        },\n        _getGrammarChecker: function()\n        {\n            return (typeof window[\"BeyondGrammar\"] === 'undefined') ? false : window[\"BeyondGrammar\"][\"GrammarChecker\"];\n        }\n    });\n})(Redactor);"]}