{"version":3,"sources":["CraftAssetImages.js"],"names":["plugin","$","extend","Craft","Redactor","PluginBase","title","apiTarget","icon","transforms","volumes","allowAllUploaders","showModal","this","app","selection","isCollapsed","save","selectionMarkers","saveMarkers","assetSelectionModal","criteria","siteId","elementSiteId","kind","uploaderId","createElementSelectorModal","storageKey","multiSelect","sources","onSelect","proxy","assets","transform","length","restoreMarkers","restore","data","i","asset","url","id","api","closeOtherModals","show","setTransforms","setVolumes","add"],"mappings":"AAAA,IAAIA,OAASC,EAAEC,OAAO,GAAIC,MAAMC,SAASC,WAAY,CACjDC,MAAO,QACPC,UAAW,oCACXC,KAAM,gCACNC,WAAY,GACZC,QAAS,KACTC,mBAAmB,EAEnBC,UAAW,WASP,GARIC,KAAKC,IAAIC,UAAUC,eACnBH,KAAKC,IAAIC,UAAUE,OACnBJ,KAAKC,IAAII,kBAAmB,IAE5BL,KAAKC,IAAIC,UAAUI,cACnBN,KAAKC,IAAII,kBAAmB,QAGQ,IAA7BL,KAAKO,oBAAqC,CACjD,IAAIC,EAAW,CACXC,OAAQT,KAAKU,cACbC,KAAM,SAGNX,KAAKF,oBACLU,EAASI,WAAa,MAG1BZ,KAAKO,oBAAsBjB,MAAMuB,2BAA2B,yBAA0B,CAClFC,WAAY,4BACZC,aAAa,EACbC,QAAShB,KAAKH,QACdW,SAAUA,EACVS,SAAU7B,EAAE8B,OAAM,SAASC,EAAQC,GAC/B,GAAID,EAAOE,OAAQ,CACXrB,KAAKC,IAAII,iBACTL,KAAKC,IAAIC,UAAUoB,iBAEnBtB,KAAKC,IAAIC,UAAUqB,UAGvBvB,KAAKC,IAAII,kBAAmB,EAG5B,IAFA,IAAImB,EAAO,GAEFC,EAAI,EAAGA,EAAIN,EAAOE,OAAQI,IAAK,CACpC,IAAIC,EAAQP,EAAOM,GACfE,EAAMD,EAAMC,IAAM,UAAYD,EAAME,GAEpCR,IACAO,GAAO,cAAgBP,GAG3BI,EAAK,QAAQE,EAAME,IAAM,CACrBD,IAAKA,EACLC,GAAIF,EAAME,IAIlB5B,KAAKC,IAAI4B,IAAI,sBAAuBL,MAEzCxB,MACH8B,kBAAkB,EAClBlC,WAAYI,KAAKJ,kBAIrBI,KAAKO,oBAAoBwB,QAIjCC,cAAe,SAAUpC,GACrBI,KAAKJ,WAAaA,GAGtBqC,WAAY,SAAUpC,GAClBG,KAAKH,QAAUA,KAMpBN,SADI2C,IAAI,SAAU,mBAAoB/C","file":"CraftAssetImages.min.js","sourcesContent":["var plugin = $.extend({}, Craft.Redactor.PluginBase, {\n    title: 'image',\n    apiTarget: 'plugin.craftAssetImages.showModal',\n    icon: '<i class=\"re-icon-image\"></i>',\n    transforms: [],\n    volumes: null,\n    allowAllUploaders: false,\n\n    showModal: function () {\n        if (this.app.selection.isCollapsed()) {\n            this.app.selection.save();\n            this.app.selectionMarkers = false;\n        } else {\n            this.app.selection.saveMarkers();\n            this.app.selectionMarkers = true;\n        }\n\n        if (typeof this.assetSelectionModal === 'undefined') {\n            var criteria = {\n                siteId: this.elementSiteId,\n                kind: 'image'\n            };\n\n            if (this.allowAllUploaders) {\n                criteria.uploaderId = null;\n            }\n\n            this.assetSelectionModal = Craft.createElementSelectorModal('craft\\\\elements\\\\Asset', {\n                storageKey: 'RedactorInput.ChooseImage',\n                multiSelect: true,\n                sources: this.volumes,\n                criteria: criteria,\n                onSelect: $.proxy(function(assets, transform) {\n                    if (assets.length) {\n                        if (this.app.selectionMarkers) {\n                            this.app.selection.restoreMarkers();\n                        } else {\n                            this.app.selection.restore();\n                        }\n\n                        this.app.selectionMarkers = false;\n                        var data = {};\n\n                        for (var i = 0; i < assets.length; i++) {\n                            var asset = assets[i],\n                                url = asset.url + '#asset:' + asset.id;\n\n                            if (transform) {\n                                url += ':transform:' + transform;\n                            }\n\n                            data['asset'+asset.id] = {\n                                url: url,\n                                id: asset.id\n                            };\n                        }\n\n                        this.app.api('module.image.insert', data);\n                    }\n                }, this),\n                closeOtherModals: false,\n                transforms: this.transforms\n            });\n        }\n        else {\n            this.assetSelectionModal.show();\n        }\n    },\n\n    setTransforms: function (transforms) {\n        this.transforms = transforms;\n    },\n\n    setVolumes: function (volumes) {\n        this.volumes = volumes;\n    }\n});\n\n(function($R) {\n    $R.add('plugin', 'craftAssetImages', plugin);\n})(Redactor);\n"]}